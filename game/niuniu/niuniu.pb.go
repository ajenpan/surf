// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.18.1
// source: niuniu.proto

package niuniu

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 牌型类型
type CardType int32

const (
	CardType_BULL_NO_POINT   CardType = 0  // 无点牌
	CardType_BULL_ONE        CardType = 1  // 牛一
	CardType_BULL_TWO        CardType = 2  // 牛二
	CardType_BULL_THREE      CardType = 3  // 牛三
	CardType_BULL_FOUR       CardType = 4  // 牛四
	CardType_BULL_FIVE       CardType = 5  // 牛五
	CardType_BULL_SIX        CardType = 6  // 牛六
	CardType_BULL_SEVEN      CardType = 7  // 牛七
	CardType_BULL_EIGHT      CardType = 8  // 牛八
	CardType_BULL_NINE       CardType = 9  // 牛九
	CardType_BULL_BULL       CardType = 10 // 牛牛
	CardType_BULL_FOURBOMB   CardType = 11 // 四炸
	CardType_BULL_FIVEFLOWER CardType = 12 // 五花
	CardType_BULL_FIVESMALL  CardType = 13 // 五小
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0:  "BULL_NO_POINT",
		1:  "BULL_ONE",
		2:  "BULL_TWO",
		3:  "BULL_THREE",
		4:  "BULL_FOUR",
		5:  "BULL_FIVE",
		6:  "BULL_SIX",
		7:  "BULL_SEVEN",
		8:  "BULL_EIGHT",
		9:  "BULL_NINE",
		10: "BULL_BULL",
		11: "BULL_FOURBOMB",
		12: "BULL_FIVEFLOWER",
		13: "BULL_FIVESMALL",
	}
	CardType_value = map[string]int32{
		"BULL_NO_POINT":   0,
		"BULL_ONE":        1,
		"BULL_TWO":        2,
		"BULL_THREE":      3,
		"BULL_FOUR":       4,
		"BULL_FIVE":       5,
		"BULL_SIX":        6,
		"BULL_SEVEN":      7,
		"BULL_EIGHT":      8,
		"BULL_NINE":       9,
		"BULL_BULL":       10,
		"BULL_FOURBOMB":   11,
		"BULL_FIVEFLOWER": 12,
		"BULL_FIVESMALL":  13,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_niuniu_proto_enumTypes[0].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_niuniu_proto_enumTypes[0]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardType.Descriptor instead.
func (CardType) EnumDescriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{0}
}

type GameStep int32

const (
	GameStep_UNKNOW        GameStep = 0
	GameStep_IDLE          GameStep = 1  // 空闲,等待玩家准备
	GameStep_COUNTDOWN     GameStep = 2  // 开始倒计时
	GameStep_BEGIN         GameStep = 3  // 开始
	GameStep_BANKER        GameStep = 4  // 抢庄
	GameStep_BANKER_NOTIFY GameStep = 5  // 通知庄
	GameStep_BET           GameStep = 6  // 下注
	GameStep_DEAL_CARDS    GameStep = 7  // 发牌
	GameStep_SHOW_CARDS    GameStep = 8  // 亮牌
	GameStep_TALLY         GameStep = 9  // 游戏结算
	GameStep_OVER          GameStep = 10 // 游戏结束
)

// Enum value maps for GameStep.
var (
	GameStep_name = map[int32]string{
		0:  "UNKNOW",
		1:  "IDLE",
		2:  "COUNTDOWN",
		3:  "BEGIN",
		4:  "BANKER",
		5:  "BANKER_NOTIFY",
		6:  "BET",
		7:  "DEAL_CARDS",
		8:  "SHOW_CARDS",
		9:  "TALLY",
		10: "OVER",
	}
	GameStep_value = map[string]int32{
		"UNKNOW":        0,
		"IDLE":          1,
		"COUNTDOWN":     2,
		"BEGIN":         3,
		"BANKER":        4,
		"BANKER_NOTIFY": 5,
		"BET":           6,
		"DEAL_CARDS":    7,
		"SHOW_CARDS":    8,
		"TALLY":         9,
		"OVER":          10,
	}
)

func (x GameStep) Enum() *GameStep {
	p := new(GameStep)
	*p = x
	return p
}

func (x GameStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStep) Descriptor() protoreflect.EnumDescriptor {
	return file_niuniu_proto_enumTypes[1].Descriptor()
}

func (GameStep) Type() protoreflect.EnumType {
	return &file_niuniu_proto_enumTypes[1]
}

func (x GameStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStep.Descriptor instead.
func (GameStep) EnumDescriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{1}
}

type OutCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  CardType `protobuf:"varint,1,opt,name=type,proto3,enum=game.niuniu.CardType" json:"type,omitempty"`
	Cards []byte   `protobuf:"bytes,2,opt,name=cards,proto3" json:"cards,omitempty"` // 有牛: 前三张为组成牛牛的三张牌, 其它从大到小排序
}

func (x *OutCardInfo) Reset() {
	*x = OutCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutCardInfo) ProtoMessage() {}

func (x *OutCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutCardInfo.ProtoReflect.Descriptor instead.
func (*OutCardInfo) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{0}
}

func (x *OutCardInfo) GetType() CardType {
	if x != nil {
		return x.Type
	}
	return CardType_BULL_NO_POINT
}

func (x *OutCardInfo) GetCards() []byte {
	if x != nil {
		return x.Cards
	}
	return nil
}

type GamePlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId    int32        `protobuf:"varint,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	GameStep  GameStep     `protobuf:"varint,2,opt,name=game_step,json=gameStep,proto3,enum=game.niuniu.GameStep" json:"game_step,omitempty"`
	Ready     int32        `protobuf:"varint,3,opt,name=ready,proto3" json:"ready,omitempty"`
	BankerRob int32        `protobuf:"varint,4,opt,name=banker_rob,json=bankerRob,proto3" json:"banker_rob,omitempty"` // 抢庄
	Banker    bool         `protobuf:"varint,5,opt,name=banker,proto3" json:"banker,omitempty"`
	BetRate   int32        `protobuf:"varint,6,opt,name=bet_rate,json=betRate,proto3" json:"bet_rate,omitempty"`      // 下注倍率
	HandCards []byte       `protobuf:"bytes,7,opt,name=hand_cards,json=handCards,proto3" json:"hand_cards,omitempty"` //
	OutCard   *OutCardInfo `protobuf:"bytes,8,opt,name=out_card,json=outCard,proto3" json:"out_card,omitempty"`
}

func (x *GamePlayerInfo) Reset() {
	*x = GamePlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamePlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamePlayerInfo) ProtoMessage() {}

func (x *GamePlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamePlayerInfo.ProtoReflect.Descriptor instead.
func (*GamePlayerInfo) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{1}
}

func (x *GamePlayerInfo) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *GamePlayerInfo) GetGameStep() GameStep {
	if x != nil {
		return x.GameStep
	}
	return GameStep_UNKNOW
}

func (x *GamePlayerInfo) GetReady() int32 {
	if x != nil {
		return x.Ready
	}
	return 0
}

func (x *GamePlayerInfo) GetBankerRob() int32 {
	if x != nil {
		return x.BankerRob
	}
	return 0
}

func (x *GamePlayerInfo) GetBanker() bool {
	if x != nil {
		return x.Banker
	}
	return false
}

func (x *GamePlayerInfo) GetBetRate() int32 {
	if x != nil {
		return x.BetRate
	}
	return 0
}

func (x *GamePlayerInfo) GetHandCards() []byte {
	if x != nil {
		return x.HandCards
	}
	return nil
}

func (x *GamePlayerInfo) GetOutCard() *OutCardInfo {
	if x != nil {
		return x.OutCard
	}
	return nil
}

type GameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameStep   GameStep                  `protobuf:"varint,4,opt,name=game_step,json=gameStep,proto3,enum=game.niuniu.GameStep" json:"game_step,omitempty"` // 游戏状态
	PlayerInfo map[int32]*GamePlayerInfo `protobuf:"bytes,5,rep,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GameInfo) Reset() {
	*x = GameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfo) ProtoMessage() {}

func (x *GameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfo.ProtoReflect.Descriptor instead.
func (*GameInfo) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{2}
}

func (x *GameInfo) GetGameStep() GameStep {
	if x != nil {
		return x.GameStep
	}
	return GameStep_UNKNOW
}

func (x *GameInfo) GetPlayerInfo() map[int32]*GamePlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

// 游戏全量信息
type ReqGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqGameInfo) Reset() {
	*x = ReqGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGameInfo) ProtoMessage() {}

func (x *ReqGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGameInfo.ProtoReflect.Descriptor instead.
func (*ReqGameInfo) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{3}
}

type RespGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info     *GameInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	GameConf string    `protobuf:"bytes,2,opt,name=game_conf,json=gameConf,proto3" json:"game_conf,omitempty"`
	GameInfo *GameInfo `protobuf:"bytes,3,opt,name=game_info,json=gameInfo,proto3" json:"game_info,omitempty"`
}

func (x *RespGameInfo) Reset() {
	*x = RespGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGameInfo) ProtoMessage() {}

func (x *RespGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGameInfo.ProtoReflect.Descriptor instead.
func (*RespGameInfo) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{4}
}

func (x *RespGameInfo) GetInfo() *GameInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RespGameInfo) GetGameConf() string {
	if x != nil {
		return x.GameConf
	}
	return ""
}

func (x *RespGameInfo) GetGameInfo() *GameInfo {
	if x != nil {
		return x.GameInfo
	}
	return nil
}

type NotifyGameStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameStep GameStep `protobuf:"varint,1,opt,name=game_step,json=gameStep,proto3,enum=game.niuniu.GameStep" json:"game_step,omitempty"` // 游戏状态
	TimeDown int32    `protobuf:"varint,3,opt,name=time_down,json=timeDown,proto3" json:"time_down,omitempty"`                           // 倒计时
}

func (x *NotifyGameStep) Reset() {
	*x = NotifyGameStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameStep) ProtoMessage() {}

func (x *NotifyGameStep) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameStep.ProtoReflect.Descriptor instead.
func (*NotifyGameStep) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{5}
}

func (x *NotifyGameStep) GetGameStep() GameStep {
	if x != nil {
		return x.GameStep
	}
	return GameStep_UNKNOW
}

func (x *NotifyGameStep) GetTimeDown() int32 {
	if x != nil {
		return x.TimeDown
	}
	return 0
}

// 用户请求抢庄
type ReqPlayerBanker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rob int32 `protobuf:"varint,2,opt,name=rob,proto3" json:"rob,omitempty"` // 1:不抢, 2: 抢
}

func (x *ReqPlayerBanker) Reset() {
	*x = ReqPlayerBanker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPlayerBanker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPlayerBanker) ProtoMessage() {}

func (x *ReqPlayerBanker) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPlayerBanker.ProtoReflect.Descriptor instead.
func (*ReqPlayerBanker) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{6}
}

func (x *ReqPlayerBanker) GetRob() int32 {
	if x != nil {
		return x.Rob
	}
	return 0
}

// 广播抢庄用户
type NotifyPlayerBanker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId int32 `protobuf:"varint,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	Rob    int32 `protobuf:"varint,2,opt,name=rob,proto3" json:"rob,omitempty"`
}

func (x *NotifyPlayerBanker) Reset() {
	*x = NotifyPlayerBanker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPlayerBanker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPlayerBanker) ProtoMessage() {}

func (x *NotifyPlayerBanker) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPlayerBanker.ProtoReflect.Descriptor instead.
func (*NotifyPlayerBanker) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{7}
}

func (x *NotifyPlayerBanker) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *NotifyPlayerBanker) GetRob() int32 {
	if x != nil {
		return x.Rob
	}
	return 0
}

// 广播庄家位置
type NotifyBankerSeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId int32 `protobuf:"varint,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
}

func (x *NotifyBankerSeat) Reset() {
	*x = NotifyBankerSeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyBankerSeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyBankerSeat) ProtoMessage() {}

func (x *NotifyBankerSeat) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyBankerSeat.ProtoReflect.Descriptor instead.
func (*NotifyBankerSeat) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{8}
}

func (x *NotifyBankerSeat) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

// 闲家下注
type ReqPlayerBetRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate int32 `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *ReqPlayerBetRate) Reset() {
	*x = ReqPlayerBetRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPlayerBetRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPlayerBetRate) ProtoMessage() {}

func (x *ReqPlayerBetRate) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPlayerBetRate.ProtoReflect.Descriptor instead.
func (*ReqPlayerBetRate) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{9}
}

func (x *ReqPlayerBetRate) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

// 广播闲家下注倍率信息
type NotifyPlayerBetRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId int32 `protobuf:"varint,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	Rate   int32 `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *NotifyPlayerBetRate) Reset() {
	*x = NotifyPlayerBetRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPlayerBetRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPlayerBetRate) ProtoMessage() {}

func (x *NotifyPlayerBetRate) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPlayerBetRate.ProtoReflect.Descriptor instead.
func (*NotifyPlayerBetRate) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{10}
}

func (x *NotifyPlayerBetRate) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *NotifyPlayerBetRate) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

// 通知用户手牌信息
type NotifyPlayerHandCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId    int32  `protobuf:"varint,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	HandCards []byte `protobuf:"bytes,2,opt,name=hand_cards,json=handCards,proto3" json:"hand_cards,omitempty"`
}

func (x *NotifyPlayerHandCards) Reset() {
	*x = NotifyPlayerHandCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPlayerHandCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPlayerHandCards) ProtoMessage() {}

func (x *NotifyPlayerHandCards) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPlayerHandCards.ProtoReflect.Descriptor instead.
func (*NotifyPlayerHandCards) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{11}
}

func (x *NotifyPlayerHandCards) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *NotifyPlayerHandCards) GetHandCards() []byte {
	if x != nil {
		return x.HandCards
	}
	return nil
}

// 请求上传出牌信息
type ReqPlayerOutCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutCard *OutCardInfo `protobuf:"bytes,1,opt,name=out_card,json=outCard,proto3" json:"out_card,omitempty"`
}

func (x *ReqPlayerOutCard) Reset() {
	*x = ReqPlayerOutCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPlayerOutCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPlayerOutCard) ProtoMessage() {}

func (x *ReqPlayerOutCard) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPlayerOutCard.ProtoReflect.Descriptor instead.
func (*ReqPlayerOutCard) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{12}
}

func (x *ReqPlayerOutCard) GetOutCard() *OutCardInfo {
	if x != nil {
		return x.OutCard
	}
	return nil
}

// 广播用户出牌结果
type NotifyPlayerOutCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId  int32        `protobuf:"varint,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	OutCard *OutCardInfo `protobuf:"bytes,2,opt,name=out_card,json=outCard,proto3" json:"out_card,omitempty"`
}

func (x *NotifyPlayerOutCard) Reset() {
	*x = NotifyPlayerOutCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyPlayerOutCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyPlayerOutCard) ProtoMessage() {}

func (x *NotifyPlayerOutCard) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyPlayerOutCard.ProtoReflect.Descriptor instead.
func (*NotifyPlayerOutCard) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{13}
}

func (x *NotifyPlayerOutCard) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *NotifyPlayerOutCard) GetOutCard() *OutCardInfo {
	if x != nil {
		return x.OutCard
	}
	return nil
}

// 游戏结算
type NotifyGameTally struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankerSeatId int32                                `protobuf:"varint,1,opt,name=banker_seat_id,json=bankerSeatId,proto3" json:"banker_seat_id,omitempty"`
	TallInfo     map[int32]*NotifyGameTally_TallyInfo `protobuf:"bytes,2,rep,name=tall_info,json=tallInfo,proto3" json:"tall_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 用户输户赢信息
}

func (x *NotifyGameTally) Reset() {
	*x = NotifyGameTally{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameTally) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameTally) ProtoMessage() {}

func (x *NotifyGameTally) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameTally.ProtoReflect.Descriptor instead.
func (*NotifyGameTally) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{14}
}

func (x *NotifyGameTally) GetBankerSeatId() int32 {
	if x != nil {
		return x.BankerSeatId
	}
	return 0
}

func (x *NotifyGameTally) GetTallInfo() map[int32]*NotifyGameTally_TallyInfo {
	if x != nil {
		return x.TallInfo
	}
	return nil
}

type NotifyGameTally_TallyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId int32 `protobuf:"varint,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	Coins  int32 `protobuf:"varint,2,opt,name=coins,proto3" json:"coins,omitempty"`
}

func (x *NotifyGameTally_TallyInfo) Reset() {
	*x = NotifyGameTally_TallyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_niuniu_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGameTally_TallyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGameTally_TallyInfo) ProtoMessage() {}

func (x *NotifyGameTally_TallyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_niuniu_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGameTally_TallyInfo.ProtoReflect.Descriptor instead.
func (*NotifyGameTally_TallyInfo) Descriptor() ([]byte, []int) {
	return file_niuniu_proto_rawDescGZIP(), []int{14, 0}
}

func (x *NotifyGameTally_TallyInfo) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *NotifyGameTally_TallyInfo) GetCoins() int32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

var File_niuniu_proto protoreflect.FileDescriptor

var file_niuniu_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x22, 0x4e, 0x0a, 0x0b, 0x4f,
	0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x99, 0x02, 0x0a, 0x0e,
	0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x62, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x52, 0x6f, 0x62,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x65, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e,
	0x69, 0x75, 0x2e, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x6f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e,
	0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x5a, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e,
	0x69, 0x75, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0d, 0x0a, 0x0b,
	0x52, 0x65, 0x71, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x70, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x32, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e,
	0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x61, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x22, 0x23, 0x0a, 0x0f, 0x52,
	0x65, 0x71, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x62,
	0x22, 0x3f, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f,
	0x62, 0x22, 0x2b, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x65,
	0x72, 0x53, 0x65, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0x26,
	0x0a, 0x10, 0x52, 0x65, 0x71, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x42, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x47, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x33, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e,
	0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x22, 0x63, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69,
	0x75, 0x6e, 0x69, 0x75, 0x2e, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0xa1, 0x02, 0x0a, 0x0f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x0e, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69,
	0x75, 0x6e, 0x69, 0x75, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x54,
	0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x54, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x3a, 0x0a, 0x09,
	0x54, 0x61, 0x6c, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x1a, 0x63, 0x0a, 0x0d, 0x54, 0x61, 0x6c, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0xef, 0x01,
	0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x55,
	0x4c, 0x4c, 0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x42, 0x55, 0x4c, 0x4c, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42,
	0x55, 0x4c, 0x4c, 0x5f, 0x54, 0x57, 0x4f, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x55, 0x4c,
	0x4c, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x55, 0x4c,
	0x4c, 0x5f, 0x46, 0x4f, 0x55, 0x52, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x55, 0x4c, 0x4c,
	0x5f, 0x46, 0x49, 0x56, 0x45, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x55, 0x4c, 0x4c, 0x5f,
	0x53, 0x49, 0x58, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x45,
	0x56, 0x45, 0x4e, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x55, 0x4c, 0x4c, 0x5f, 0x45, 0x49,
	0x47, 0x48, 0x54, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x55, 0x4c, 0x4c, 0x5f, 0x4e, 0x49,
	0x4e, 0x45, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x55, 0x4c, 0x4c, 0x5f, 0x42, 0x55, 0x4c,
	0x4c, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x55, 0x4c, 0x4c, 0x5f, 0x46, 0x4f, 0x55, 0x52,
	0x42, 0x4f, 0x4d, 0x42, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x55, 0x4c, 0x4c, 0x5f, 0x46,
	0x49, 0x56, 0x45, 0x46, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x42,
	0x55, 0x4c, 0x4c, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x0d, 0x2a,
	0x97, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x41, 0x4e, 0x4b, 0x45, 0x52, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x41, 0x4e, 0x4b,
	0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x42,
	0x45, 0x54, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x41, 0x4c, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x53, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x53, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x41, 0x4c, 0x4c, 0x59, 0x10, 0x09, 0x12,
	0x08, 0x0a, 0x04, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x0a, 0x42, 0x22, 0x5a, 0x12, 0x67, 0x61, 0x6d,
	0x65, 0x2f, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x3b, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0xaa,
	0x02, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6e, 0x69, 0x75, 0x6e, 0x69, 0x75, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_niuniu_proto_rawDescOnce sync.Once
	file_niuniu_proto_rawDescData = file_niuniu_proto_rawDesc
)

func file_niuniu_proto_rawDescGZIP() []byte {
	file_niuniu_proto_rawDescOnce.Do(func() {
		file_niuniu_proto_rawDescData = protoimpl.X.CompressGZIP(file_niuniu_proto_rawDescData)
	})
	return file_niuniu_proto_rawDescData
}

var file_niuniu_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_niuniu_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_niuniu_proto_goTypes = []any{
	(CardType)(0),                     // 0: game.niuniu.CardType
	(GameStep)(0),                     // 1: game.niuniu.GameStep
	(*OutCardInfo)(nil),               // 2: game.niuniu.OutCardInfo
	(*GamePlayerInfo)(nil),            // 3: game.niuniu.GamePlayerInfo
	(*GameInfo)(nil),                  // 4: game.niuniu.GameInfo
	(*ReqGameInfo)(nil),               // 5: game.niuniu.ReqGameInfo
	(*RespGameInfo)(nil),              // 6: game.niuniu.RespGameInfo
	(*NotifyGameStep)(nil),            // 7: game.niuniu.NotifyGameStep
	(*ReqPlayerBanker)(nil),           // 8: game.niuniu.ReqPlayerBanker
	(*NotifyPlayerBanker)(nil),        // 9: game.niuniu.NotifyPlayerBanker
	(*NotifyBankerSeat)(nil),          // 10: game.niuniu.NotifyBankerSeat
	(*ReqPlayerBetRate)(nil),          // 11: game.niuniu.ReqPlayerBetRate
	(*NotifyPlayerBetRate)(nil),       // 12: game.niuniu.NotifyPlayerBetRate
	(*NotifyPlayerHandCards)(nil),     // 13: game.niuniu.NotifyPlayerHandCards
	(*ReqPlayerOutCard)(nil),          // 14: game.niuniu.ReqPlayerOutCard
	(*NotifyPlayerOutCard)(nil),       // 15: game.niuniu.NotifyPlayerOutCard
	(*NotifyGameTally)(nil),           // 16: game.niuniu.NotifyGameTally
	nil,                               // 17: game.niuniu.GameInfo.PlayerInfoEntry
	(*NotifyGameTally_TallyInfo)(nil), // 18: game.niuniu.NotifyGameTally.TallyInfo
	nil,                               // 19: game.niuniu.NotifyGameTally.TallInfoEntry
}
var file_niuniu_proto_depIdxs = []int32{
	0,  // 0: game.niuniu.OutCardInfo.type:type_name -> game.niuniu.CardType
	1,  // 1: game.niuniu.GamePlayerInfo.game_step:type_name -> game.niuniu.GameStep
	2,  // 2: game.niuniu.GamePlayerInfo.out_card:type_name -> game.niuniu.OutCardInfo
	1,  // 3: game.niuniu.GameInfo.game_step:type_name -> game.niuniu.GameStep
	17, // 4: game.niuniu.GameInfo.player_info:type_name -> game.niuniu.GameInfo.PlayerInfoEntry
	4,  // 5: game.niuniu.RespGameInfo.info:type_name -> game.niuniu.GameInfo
	4,  // 6: game.niuniu.RespGameInfo.game_info:type_name -> game.niuniu.GameInfo
	1,  // 7: game.niuniu.NotifyGameStep.game_step:type_name -> game.niuniu.GameStep
	2,  // 8: game.niuniu.ReqPlayerOutCard.out_card:type_name -> game.niuniu.OutCardInfo
	2,  // 9: game.niuniu.NotifyPlayerOutCard.out_card:type_name -> game.niuniu.OutCardInfo
	19, // 10: game.niuniu.NotifyGameTally.tall_info:type_name -> game.niuniu.NotifyGameTally.TallInfoEntry
	3,  // 11: game.niuniu.GameInfo.PlayerInfoEntry.value:type_name -> game.niuniu.GamePlayerInfo
	18, // 12: game.niuniu.NotifyGameTally.TallInfoEntry.value:type_name -> game.niuniu.NotifyGameTally.TallyInfo
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_niuniu_proto_init() }
func file_niuniu_proto_init() {
	if File_niuniu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_niuniu_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*OutCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GamePlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RespGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NotifyGameStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReqPlayerBanker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*NotifyPlayerBanker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*NotifyBankerSeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ReqPlayerBetRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*NotifyPlayerBetRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*NotifyPlayerHandCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ReqPlayerOutCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*NotifyPlayerOutCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*NotifyGameTally); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_niuniu_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*NotifyGameTally_TallyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_niuniu_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_niuniu_proto_goTypes,
		DependencyIndexes: file_niuniu_proto_depIdxs,
		EnumInfos:         file_niuniu_proto_enumTypes,
		MessageInfos:      file_niuniu_proto_msgTypes,
	}.Build()
	File_niuniu_proto = out.File
	file_niuniu_proto_rawDesc = nil
	file_niuniu_proto_goTypes = nil
	file_niuniu_proto_depIdxs = nil
}
