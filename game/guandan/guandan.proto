syntax = "proto3";

package game.guandan;

option go_package = "./game/guandan;guandan";

enum StageType {
  StageNone = 0;          // 无效
  StageGameStart = 12;    // 开局
  StageShuffleCards = 16; // 洗牌
  StageDealingCards = 20; // 发牌
  StageGaming = 30;       // 对局
  StageTally = 40;        // 小结算
  StageFinalResult = 41;  // 大结算
}

enum DeckType {
  dt_pass = 0;           // 过
  dt_single = 1;         // 单张
  dt_pair = 2;           // 对子
  dt_three = 3;          // 3张
  dt_three_with_two = 4; // 3带2
  dt_straight = 5;       // 顺子
  dt_flush_straight = 6; // 同花顺
  dt_straight_pair = 7;  // 连对
  dt_straight_three = 8; // 钢板 （2 个连续的三张牌）
  dt_bomb4 = 9;          // 4炸
  dt_bomb5 = 10;         // 5炸
  dt_bomb6 = 11;         // 6炸
  dt_bomb7 = 12;         // 7炸
  dt_bomb8 = 13;         // 8炸
  dt_bomb9 = 14;         // 9炸
  dt_bomb10 = 15;        // 10炸
  dt_bomb_joker = 16;    // 王炸
  dt_windflow = 17;      // 接风
}

message OutCardInfo {
  int32 seat_id = 1;
  DeckType deck_type = 2;
  bytes cards = 3;
}

message PlayerGameInfo {
  int32 seat_id = 1;
  int32 ready = 3;
  int32 banker_rob = 4; // 抢庄
  int32 bet_rate = 6;   // 下注倍率
  bytes hand_cards = 7; //
  repeated OutCardInfo curr_out_card = 8;
}

enum ActionType {
  at_unknow = 0;
  at_ready = 1;
  at_rob_lord = 10;    // 抢地主
  at_giveup_lord = 11; // 放弃地主
  at_show_card = 20;   // 明牌
  at_double_bet = 21;  // 加倍
  at_out_card = 30;    // 出牌
}

message ActionInfo {
  int32 seat_id = 1;
  StageType stage = 2;
}

message GameInfo {
  StageType stage = 1;
  int32 curr_action_seat_id = 2; // 当前操作玩家
  map<int32, PlayerGameInfo> player_info = 5;
}

message NotifyPlayerActionPower {
  int32 seat_id = 1;
  ActionType action = 2;
}

message ReqOutCard {
  DeckType deck_type = 2;
  bytes cards = 3;
}

message RespOutCard {
  int32 flag = 1;
  string errmsg = 2;
}

message NotifyPlayerOutCard {
  OutCardInfo out_cards = 1;
}
