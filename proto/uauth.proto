syntax = "proto3";

package openproto.uauth;
option go_package = "msg/uauth";
option csharp_namespace = "src.msg.uauth";

enum ResponseFlag {
  Success = 0;

  // common
  CaptchaWrong = 2;
  PasswdWrong = 3;
  UnameNotFound = 4;
  StatErr = 5;
  DataBaseErr = 11;
  GenTokenErr = 21;
  // login + 100
}

message ReqCaptcha {
  string captcha_type = 1;
}

message RespCaptcha {
  string captcha_id = 1;
  string base64_captcha = 2;
}

message CaptchaVerify {
  string captcha_id = 1;
  string answer = 2;
}

message UserInfo {
  int64 uid = 1;
  string uname = 2;
  int32 stat = 3;
  int64 created = 4;
  string nickname = 5;
  string avatar = 6;
}

message ReqLogin {
  string uname = 1;
  string passwd = 2;

  CaptchaVerify captcha_verify = 3;
}

message RespLogin {
  string assess_token = 1;
  UserInfo user_info = 3;
}

message ReqRefreshToken {
  string access_token = 1;
  string refresh_token = 2;
}

message RespRefreshToken {
  string access_token = 1;
}

message ReqRegister {
  string uname = 1;
  string passwd = 2;
  string nickname = 3;
  string email = 4;
}

message RespRegister {
  string msg = 1;
}

// verify
message ReqUserInfo {
  int64 uid = 1;
}
message RespUserInfo {
  UserInfo info = 1;
}

// change user's passwd
message ReqModifyPasswd {}
message RespModifyPasswd {}

// reset user's passwd if forgot
message ReqResetPasswd {}
message RespResetPasswd {}

message ReqAnonymousLogin {
  string uname = 1;
  string passwd = 2;
}

message RespAnonymousLogin {
  string assess_token = 1;
  UserInfo user_info = 3;
}

message ReqVerifyToken {
  string access_token = 1;

}
message RespVerifyToken {
  bool ok = 1;
  UserInfo user_info = 3;
}

message ReqPublicKeys {
  
}

message RespPublicKeys {
  bytes keys = 1;
}
