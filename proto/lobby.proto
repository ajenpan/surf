syntax = "proto3";

package openproto.lobby;
option go_package = "msg/lobby";
option csharp_namespace = "src.msg.lobby";

enum PlayerStatus {
  PlayerNone = 0;
  PlayerInQueue = 10;
  PlayerInTable = 20;
  PlayerInTableReady = 21;
  PlayerInGaming = 31;
}

enum TableStatus {
  TableNone = 0;
  TableInCreating = 10;
  TableInInGaming = 31;
  TableFinished = 40;
}

message UserBaseInfo {
  string nickname = 1;
  string avatar = 2;
  int64 reg_time = 3;
  int64 reg_channel_id = 4;
}

// 用户道具数据
message UserPropInfo {
  map<int32, int64> props = 1;
}

// 游戏数据
message UserGameBaseInfo {
  int32 game_id = 1;
  int64 win_cnt = 2;
  int64 fail_cnt = 3;
  int64 draw_cnt = 4;
  int64 exp = 5;
  int64 play_score = 6;
}

message UserPlayingInfo {
  PlayerStatus player_status = 1;
  int32 battle_node_id = 5;
  string battle_id = 6;
  int32 seat_id = 7;
}

message UserMetaInfo {
  map<string, int64> int_meta = 1;
  map<string, string> str_meta = 2;
}

message TableInfo {
  string table_id = 1;
  int32 seat_count = 2;
  TableStatus table_status = 3;
  // repeated TablePlayerInfo players = 4;
}

message ReqLoginLobby {
  enum MSGID {
    __INVALID__ = 0;
    ID = 12001;
  }
  uint32 uid = 1; // 可空
  int32 game_id = 2;
  int32 game_room_id = 3;
}

message RespLoginLobby {
  enum MSGID {
    __INVALID__ = 0;
    ID = 12002;
  }

  enum FLAG {
    // dbp returns
    kSuccess = 0;
    // process returns
    kOtherErr = 99;
    kInloining = 103; // 正在登录

    kDBPError = 105;  // 可能是dbp超时, 或者脚本catch导致的.
    kRoomidErr = 106; // 场次id 错误

    kMinSrLimit = 107;    // 金币低于房间限制
    kMaxSrLimit = 108;    // 金币超过房间限制
    kMaxTodayWin = 109;   // 输赢超过当日上限
    kRoomNotFound = 111;  // 场次没有找到
    kNotMasterNode = 112; // 不是主节点
    kInOtherRoom = 113;   // 已经在别的房间
  }

  FLAG flag = 1;

  UserBaseInfo base_info = 11;
  UserPropInfo props = 12;
  UserMetaInfo meta_info = 13;
}

message ReqDispatchQue {
  enum MSGID {
    __INVALID__ = 0;
    ID = 12003;
  }
  int32 join_type = 1;
}

message RespDispatchQue {
  enum MSGID {
    __INVALID__ = 0;
    ID = 12004;
  }
  int32 flag = 1;
  int32 dispatch_id = 2;
}

message NotifyDispatchResult {
  enum MSGID {
    __INVALID__ = 0;
    ID = 12005;
  }

  enum FLAG {
    OK = 0;
    LogicNodeEmpty = 1;
    MaxDispatchCnt = 2;          // 超过最大匹配次数
    CreateRemoteTableFailed = 3; // 创建桌子失败
    TableFeeErr = 4;             // 扣手续费失败
  }

  FLAG flag = 1;
  int32 battle_node_id = 2; // logic_process appid
  string battle_id = 3;

  message TablePlayer {
    int64 uid = 1;
    int32 seat_id = 2;
    string nickname = 3;
    int64 score = 4;
  }
  repeated TablePlayer players = 4;
}

message ReqLogoutLobby {
  enum MSGID {
    __invalid = 0;
    ID = 12010;
  }
  uint32 uid = 1;
}

message RespLogoutLobby {
  enum MSGID {
    __invalid = 0;
    ID = 12011;
  }
  int32 flag = 1;
}

message NotifyTableStatus {
  enum MSGID {
    __invalid = 0;
    ID = 12020;
  }

  TableStatus status = 1;
  int64 status_deadline = 3; // 状态截至时间戳, 0表示没有
}

message ReqUserDetailInfo {
  enum MSGID {
    __invalid = 0;
    ID = 12030;
  }
  repeated int64 uid = 1;
}

message RespUserDetailInfo {
  enum MSGID {
    __invalid = 0;
    ID = 12031;
  }
  map<int64, UserBaseInfo> users = 1;
}
