syntax = "proto3";

package openproto.battle;
option go_package = "msg/battle";
option csharp_namespace = "src.msg.battle";

// Battle ServerType = 102
// msg id start from 102 * 1000

message ReqJoinBattle {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102001;
  }
  string battle_id = 1;
  uint32 seat_id = 2;
  int32 ready_state = 3;
}

message RespJoinBattle {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102002;
  }
  string battle_id = 1;
  uint32 seat_id = 2;
  int32 ready_state = 3;
}

message ReqQuitBattle {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102003;
  }
  string battle_id = 1;
}

message RespQuitBattle {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102004;
  }
  string battle_id = 1;
}

message BattleMsgToClient {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102005;
  }
  string battle_id = 1;
  uint32 msgid = 2;
  bytes data = 3;
  uint32 syn = 4;
}

message BattleMsgToServer {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102006;
  }
  string battle_id = 1;
  uint32 msgid = 2;
  bytes data = 3;
  uint32 syn = 4;
}

// 服务内部协议

message PlayerInfo {
  int64 uid = 1; // user unique id
  int32 seat_id = 2;
  int64 score = 3;
  int32 role = 4;
}

message TableConfigure {
  int32 max_game_time = 1; // second
  bytes game_context = 2;  // 续卓上下文
}

message ReqStartBattle {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102101;
  }
  // int32 game_id = 1;
  string game_name = 2;
  bytes game_conf = 3;
  TableConfigure table_conf = 5;
  repeated PlayerInfo player_infos = 6;
  string playid = 7;
}

message RespStartBattle {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102102;
  }
  string battle_id = 1;
  string playid = 2;
}

message ReqBattleOver {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102103;
  }

  enum State {
    Finished = 0;  // 完成
    Disbanded = 1; // 解散
    Timeover = 2;  // 超时
  }

  message BattleScore {
    int64 score = 1;
    bytes extra = 2;
  }

  State state = 1;
  map<int32, BattleScore> tally = 2;
  bytes extra = 3;
}

message RespBattleOver {
  enum MSGID {
    _INVALID_ = 0;
    ID = 102104;
  }
  string battle_id = 1;
  int32 errcode = 2;
  string errmsg = 3;
}

// publish events
message EventBattleStart {}
message EventBattleOver {}

message UserTally {
  int64 uid = 1;
  int32 seatid = 2;
  int32 result = 3;                    // 计分结果
  int64 chg_score = 4;                 // 分数变化
  map<int32, int64> chg_sub_score = 5; // 子分数变化
  map<string, string> extra_map = 7;   // 额外信息
};
