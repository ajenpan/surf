// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.23.4
// source: battle.proto

package battle

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReqJoinBattle_MSGID int32

const (
	ReqJoinBattle__INVALID_ ReqJoinBattle_MSGID = 0
	ReqJoinBattle_ID        ReqJoinBattle_MSGID = 102001
)

// Enum value maps for ReqJoinBattle_MSGID.
var (
	ReqJoinBattle_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102001: "ID",
	}
	ReqJoinBattle_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102001,
	}
)

func (x ReqJoinBattle_MSGID) Enum() *ReqJoinBattle_MSGID {
	p := new(ReqJoinBattle_MSGID)
	*p = x
	return p
}

func (x ReqJoinBattle_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReqJoinBattle_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[0].Descriptor()
}

func (ReqJoinBattle_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[0]
}

func (x ReqJoinBattle_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReqJoinBattle_MSGID.Descriptor instead.
func (ReqJoinBattle_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{0, 0}
}

type RespJoinBattle_MSGID int32

const (
	RespJoinBattle__INVALID_ RespJoinBattle_MSGID = 0
	RespJoinBattle_ID        RespJoinBattle_MSGID = 102002
)

// Enum value maps for RespJoinBattle_MSGID.
var (
	RespJoinBattle_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102002: "ID",
	}
	RespJoinBattle_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102002,
	}
)

func (x RespJoinBattle_MSGID) Enum() *RespJoinBattle_MSGID {
	p := new(RespJoinBattle_MSGID)
	*p = x
	return p
}

func (x RespJoinBattle_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RespJoinBattle_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[1].Descriptor()
}

func (RespJoinBattle_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[1]
}

func (x RespJoinBattle_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RespJoinBattle_MSGID.Descriptor instead.
func (RespJoinBattle_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{1, 0}
}

type ReqQuitBattle_MSGID int32

const (
	ReqQuitBattle__INVALID_ ReqQuitBattle_MSGID = 0
	ReqQuitBattle_ID        ReqQuitBattle_MSGID = 102003
)

// Enum value maps for ReqQuitBattle_MSGID.
var (
	ReqQuitBattle_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102003: "ID",
	}
	ReqQuitBattle_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102003,
	}
)

func (x ReqQuitBattle_MSGID) Enum() *ReqQuitBattle_MSGID {
	p := new(ReqQuitBattle_MSGID)
	*p = x
	return p
}

func (x ReqQuitBattle_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReqQuitBattle_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[2].Descriptor()
}

func (ReqQuitBattle_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[2]
}

func (x ReqQuitBattle_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReqQuitBattle_MSGID.Descriptor instead.
func (ReqQuitBattle_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{2, 0}
}

type RespQuitBattle_MSGID int32

const (
	RespQuitBattle__INVALID_ RespQuitBattle_MSGID = 0
	RespQuitBattle_ID        RespQuitBattle_MSGID = 102004
)

// Enum value maps for RespQuitBattle_MSGID.
var (
	RespQuitBattle_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102004: "ID",
	}
	RespQuitBattle_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102004,
	}
)

func (x RespQuitBattle_MSGID) Enum() *RespQuitBattle_MSGID {
	p := new(RespQuitBattle_MSGID)
	*p = x
	return p
}

func (x RespQuitBattle_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RespQuitBattle_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[3].Descriptor()
}

func (RespQuitBattle_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[3]
}

func (x RespQuitBattle_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RespQuitBattle_MSGID.Descriptor instead.
func (RespQuitBattle_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{3, 0}
}

type BattleMsgToClient_MSGID int32

const (
	BattleMsgToClient__INVALID_ BattleMsgToClient_MSGID = 0
	BattleMsgToClient_ID        BattleMsgToClient_MSGID = 102005
)

// Enum value maps for BattleMsgToClient_MSGID.
var (
	BattleMsgToClient_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102005: "ID",
	}
	BattleMsgToClient_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102005,
	}
)

func (x BattleMsgToClient_MSGID) Enum() *BattleMsgToClient_MSGID {
	p := new(BattleMsgToClient_MSGID)
	*p = x
	return p
}

func (x BattleMsgToClient_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleMsgToClient_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[4].Descriptor()
}

func (BattleMsgToClient_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[4]
}

func (x BattleMsgToClient_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleMsgToClient_MSGID.Descriptor instead.
func (BattleMsgToClient_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{4, 0}
}

type BattleMsgToServer_MSGID int32

const (
	BattleMsgToServer__INVALID_ BattleMsgToServer_MSGID = 0
	BattleMsgToServer_ID        BattleMsgToServer_MSGID = 102006
)

// Enum value maps for BattleMsgToServer_MSGID.
var (
	BattleMsgToServer_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102006: "ID",
	}
	BattleMsgToServer_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102006,
	}
)

func (x BattleMsgToServer_MSGID) Enum() *BattleMsgToServer_MSGID {
	p := new(BattleMsgToServer_MSGID)
	*p = x
	return p
}

func (x BattleMsgToServer_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleMsgToServer_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[5].Descriptor()
}

func (BattleMsgToServer_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[5]
}

func (x BattleMsgToServer_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleMsgToServer_MSGID.Descriptor instead.
func (BattleMsgToServer_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{5, 0}
}

type ReqStartBattle_MSGID int32

const (
	ReqStartBattle__INVALID_ ReqStartBattle_MSGID = 0
	ReqStartBattle_ID        ReqStartBattle_MSGID = 102101
)

// Enum value maps for ReqStartBattle_MSGID.
var (
	ReqStartBattle_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102101: "ID",
	}
	ReqStartBattle_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102101,
	}
)

func (x ReqStartBattle_MSGID) Enum() *ReqStartBattle_MSGID {
	p := new(ReqStartBattle_MSGID)
	*p = x
	return p
}

func (x ReqStartBattle_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReqStartBattle_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[6].Descriptor()
}

func (ReqStartBattle_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[6]
}

func (x ReqStartBattle_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReqStartBattle_MSGID.Descriptor instead.
func (ReqStartBattle_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{8, 0}
}

type RespStartBattle_MSGID int32

const (
	RespStartBattle__INVALID_ RespStartBattle_MSGID = 0
	RespStartBattle_ID        RespStartBattle_MSGID = 102102
)

// Enum value maps for RespStartBattle_MSGID.
var (
	RespStartBattle_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102102: "ID",
	}
	RespStartBattle_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102102,
	}
)

func (x RespStartBattle_MSGID) Enum() *RespStartBattle_MSGID {
	p := new(RespStartBattle_MSGID)
	*p = x
	return p
}

func (x RespStartBattle_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RespStartBattle_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[7].Descriptor()
}

func (RespStartBattle_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[7]
}

func (x RespStartBattle_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RespStartBattle_MSGID.Descriptor instead.
func (RespStartBattle_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{9, 0}
}

type ReqBattleOver_MSGID int32

const (
	ReqBattleOver__INVALID_ ReqBattleOver_MSGID = 0
	ReqBattleOver_ID        ReqBattleOver_MSGID = 102103
)

// Enum value maps for ReqBattleOver_MSGID.
var (
	ReqBattleOver_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102103: "ID",
	}
	ReqBattleOver_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102103,
	}
)

func (x ReqBattleOver_MSGID) Enum() *ReqBattleOver_MSGID {
	p := new(ReqBattleOver_MSGID)
	*p = x
	return p
}

func (x ReqBattleOver_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReqBattleOver_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[8].Descriptor()
}

func (ReqBattleOver_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[8]
}

func (x ReqBattleOver_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReqBattleOver_MSGID.Descriptor instead.
func (ReqBattleOver_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{10, 0}
}

type ReqBattleOver_State int32

const (
	ReqBattleOver_Finished  ReqBattleOver_State = 0 // 完成
	ReqBattleOver_Disbanded ReqBattleOver_State = 1 // 解散
	ReqBattleOver_Timeover  ReqBattleOver_State = 2 // 超时
)

// Enum value maps for ReqBattleOver_State.
var (
	ReqBattleOver_State_name = map[int32]string{
		0: "Finished",
		1: "Disbanded",
		2: "Timeover",
	}
	ReqBattleOver_State_value = map[string]int32{
		"Finished":  0,
		"Disbanded": 1,
		"Timeover":  2,
	}
)

func (x ReqBattleOver_State) Enum() *ReqBattleOver_State {
	p := new(ReqBattleOver_State)
	*p = x
	return p
}

func (x ReqBattleOver_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReqBattleOver_State) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[9].Descriptor()
}

func (ReqBattleOver_State) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[9]
}

func (x ReqBattleOver_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReqBattleOver_State.Descriptor instead.
func (ReqBattleOver_State) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{10, 1}
}

type RespBattleOver_MSGID int32

const (
	RespBattleOver__INVALID_ RespBattleOver_MSGID = 0
	RespBattleOver_ID        RespBattleOver_MSGID = 102104
)

// Enum value maps for RespBattleOver_MSGID.
var (
	RespBattleOver_MSGID_name = map[int32]string{
		0:      "_INVALID_",
		102104: "ID",
	}
	RespBattleOver_MSGID_value = map[string]int32{
		"_INVALID_": 0,
		"ID":        102104,
	}
)

func (x RespBattleOver_MSGID) Enum() *RespBattleOver_MSGID {
	p := new(RespBattleOver_MSGID)
	*p = x
	return p
}

func (x RespBattleOver_MSGID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RespBattleOver_MSGID) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[10].Descriptor()
}

func (RespBattleOver_MSGID) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[10]
}

func (x RespBattleOver_MSGID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RespBattleOver_MSGID.Descriptor instead.
func (RespBattleOver_MSGID) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{11, 0}
}

type ReqJoinBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId   string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	SeatId     uint32 `protobuf:"varint,2,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	ReadyState int32  `protobuf:"varint,3,opt,name=ready_state,json=readyState,proto3" json:"ready_state,omitempty"`
}

func (x *ReqJoinBattle) Reset() {
	*x = ReqJoinBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqJoinBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqJoinBattle) ProtoMessage() {}

func (x *ReqJoinBattle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqJoinBattle.ProtoReflect.Descriptor instead.
func (*ReqJoinBattle) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{0}
}

func (x *ReqJoinBattle) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *ReqJoinBattle) GetSeatId() uint32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *ReqJoinBattle) GetReadyState() int32 {
	if x != nil {
		return x.ReadyState
	}
	return 0
}

type RespJoinBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId   string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	SeatId     uint32 `protobuf:"varint,2,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	ReadyState int32  `protobuf:"varint,3,opt,name=ready_state,json=readyState,proto3" json:"ready_state,omitempty"`
}

func (x *RespJoinBattle) Reset() {
	*x = RespJoinBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespJoinBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespJoinBattle) ProtoMessage() {}

func (x *RespJoinBattle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespJoinBattle.ProtoReflect.Descriptor instead.
func (*RespJoinBattle) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{1}
}

func (x *RespJoinBattle) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *RespJoinBattle) GetSeatId() uint32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *RespJoinBattle) GetReadyState() int32 {
	if x != nil {
		return x.ReadyState
	}
	return 0
}

type ReqQuitBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
}

func (x *ReqQuitBattle) Reset() {
	*x = ReqQuitBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqQuitBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqQuitBattle) ProtoMessage() {}

func (x *ReqQuitBattle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqQuitBattle.ProtoReflect.Descriptor instead.
func (*ReqQuitBattle) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{2}
}

func (x *ReqQuitBattle) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

type RespQuitBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
}

func (x *RespQuitBattle) Reset() {
	*x = RespQuitBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespQuitBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespQuitBattle) ProtoMessage() {}

func (x *RespQuitBattle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespQuitBattle.ProtoReflect.Descriptor instead.
func (*RespQuitBattle) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{3}
}

func (x *RespQuitBattle) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

type BattleMsgToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	Msgid    uint32 `protobuf:"varint,2,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Syn      uint32 `protobuf:"varint,4,opt,name=syn,proto3" json:"syn,omitempty"`
}

func (x *BattleMsgToClient) Reset() {
	*x = BattleMsgToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleMsgToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleMsgToClient) ProtoMessage() {}

func (x *BattleMsgToClient) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleMsgToClient.ProtoReflect.Descriptor instead.
func (*BattleMsgToClient) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{4}
}

func (x *BattleMsgToClient) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleMsgToClient) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *BattleMsgToClient) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BattleMsgToClient) GetSyn() uint32 {
	if x != nil {
		return x.Syn
	}
	return 0
}

type BattleMsgToServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	Msgid    uint32 `protobuf:"varint,2,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Syn      uint32 `protobuf:"varint,4,opt,name=syn,proto3" json:"syn,omitempty"`
}

func (x *BattleMsgToServer) Reset() {
	*x = BattleMsgToServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleMsgToServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleMsgToServer) ProtoMessage() {}

func (x *BattleMsgToServer) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleMsgToServer.ProtoReflect.Descriptor instead.
func (*BattleMsgToServer) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{5}
}

func (x *BattleMsgToServer) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleMsgToServer) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *BattleMsgToServer) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BattleMsgToServer) GetSyn() uint32 {
	if x != nil {
		return x.Syn
	}
	return 0
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // user unique id
	SeatId int32 `protobuf:"varint,2,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	Score  int64 `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Role   int32 `protobuf:"varint,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerInfo) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *PlayerInfo) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PlayerInfo) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

type TableConfigure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxGameTime int32  `protobuf:"varint,1,opt,name=max_game_time,json=maxGameTime,proto3" json:"max_game_time,omitempty"` // second
	GameContext []byte `protobuf:"bytes,2,opt,name=game_context,json=gameContext,proto3" json:"game_context,omitempty"`    // 续卓上下文
}

func (x *TableConfigure) Reset() {
	*x = TableConfigure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableConfigure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableConfigure) ProtoMessage() {}

func (x *TableConfigure) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableConfigure.ProtoReflect.Descriptor instead.
func (*TableConfigure) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{7}
}

func (x *TableConfigure) GetMaxGameTime() int32 {
	if x != nil {
		return x.MaxGameTime
	}
	return 0
}

func (x *TableConfigure) GetGameContext() []byte {
	if x != nil {
		return x.GameContext
	}
	return nil
}

type ReqStartBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int32 game_id = 1;
	GameName    string          `protobuf:"bytes,2,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	GameConf    []byte          `protobuf:"bytes,3,opt,name=game_conf,json=gameConf,proto3" json:"game_conf,omitempty"`
	TableConf   *TableConfigure `protobuf:"bytes,5,opt,name=table_conf,json=tableConf,proto3" json:"table_conf,omitempty"`
	PlayerInfos []*PlayerInfo   `protobuf:"bytes,6,rep,name=player_infos,json=playerInfos,proto3" json:"player_infos,omitempty"`
	Playid      string          `protobuf:"bytes,7,opt,name=playid,proto3" json:"playid,omitempty"`
}

func (x *ReqStartBattle) Reset() {
	*x = ReqStartBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqStartBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqStartBattle) ProtoMessage() {}

func (x *ReqStartBattle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqStartBattle.ProtoReflect.Descriptor instead.
func (*ReqStartBattle) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{8}
}

func (x *ReqStartBattle) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *ReqStartBattle) GetGameConf() []byte {
	if x != nil {
		return x.GameConf
	}
	return nil
}

func (x *ReqStartBattle) GetTableConf() *TableConfigure {
	if x != nil {
		return x.TableConf
	}
	return nil
}

func (x *ReqStartBattle) GetPlayerInfos() []*PlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

func (x *ReqStartBattle) GetPlayid() string {
	if x != nil {
		return x.Playid
	}
	return ""
}

type RespStartBattle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	Playid   string `protobuf:"bytes,2,opt,name=playid,proto3" json:"playid,omitempty"`
}

func (x *RespStartBattle) Reset() {
	*x = RespStartBattle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespStartBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespStartBattle) ProtoMessage() {}

func (x *RespStartBattle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespStartBattle.ProtoReflect.Descriptor instead.
func (*RespStartBattle) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{9}
}

func (x *RespStartBattle) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *RespStartBattle) GetPlayid() string {
	if x != nil {
		return x.Playid
	}
	return ""
}

type ReqBattleOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State ReqBattleOver_State                  `protobuf:"varint,1,opt,name=state,proto3,enum=openproto.battle.ReqBattleOver_State" json:"state,omitempty"`
	Tally map[int32]*ReqBattleOver_BattleScore `protobuf:"bytes,2,rep,name=tally,proto3" json:"tally,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Extra []byte                               `protobuf:"bytes,3,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *ReqBattleOver) Reset() {
	*x = ReqBattleOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBattleOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBattleOver) ProtoMessage() {}

func (x *ReqBattleOver) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBattleOver.ProtoReflect.Descriptor instead.
func (*ReqBattleOver) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{10}
}

func (x *ReqBattleOver) GetState() ReqBattleOver_State {
	if x != nil {
		return x.State
	}
	return ReqBattleOver_Finished
}

func (x *ReqBattleOver) GetTally() map[int32]*ReqBattleOver_BattleScore {
	if x != nil {
		return x.Tally
	}
	return nil
}

func (x *ReqBattleOver) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

type RespBattleOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleId string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	Errcode  int32  `protobuf:"varint,2,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg   string `protobuf:"bytes,3,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *RespBattleOver) Reset() {
	*x = RespBattleOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespBattleOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespBattleOver) ProtoMessage() {}

func (x *RespBattleOver) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespBattleOver.ProtoReflect.Descriptor instead.
func (*RespBattleOver) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{11}
}

func (x *RespBattleOver) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *RespBattleOver) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *RespBattleOver) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

// publish events
type EventBattleStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventBattleStart) Reset() {
	*x = EventBattleStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBattleStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBattleStart) ProtoMessage() {}

func (x *EventBattleStart) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBattleStart.ProtoReflect.Descriptor instead.
func (*EventBattleStart) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{12}
}

type EventBattleOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventBattleOver) Reset() {
	*x = EventBattleOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBattleOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBattleOver) ProtoMessage() {}

func (x *EventBattleOver) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBattleOver.ProtoReflect.Descriptor instead.
func (*EventBattleOver) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{13}
}

type UserTally struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64             `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Seatid      int32             `protobuf:"varint,2,opt,name=seatid,proto3" json:"seatid,omitempty"`
	Result      int32             `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                                                                                                                         // 计分结果
	ChgScore    int64             `protobuf:"varint,4,opt,name=chg_score,json=chgScore,proto3" json:"chg_score,omitempty"`                                                                                                     // 分数变化
	ChgSubScore map[int32]int64   `protobuf:"bytes,5,rep,name=chg_sub_score,json=chgSubScore,proto3" json:"chg_sub_score,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 子分数变化
	ExtraMap    map[string]string `protobuf:"bytes,7,rep,name=extra_map,json=extraMap,proto3" json:"extra_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`              // 额外信息
}

func (x *UserTally) Reset() {
	*x = UserTally{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTally) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTally) ProtoMessage() {}

func (x *UserTally) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTally.ProtoReflect.Descriptor instead.
func (*UserTally) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{14}
}

func (x *UserTally) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserTally) GetSeatid() int32 {
	if x != nil {
		return x.Seatid
	}
	return 0
}

func (x *UserTally) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *UserTally) GetChgScore() int64 {
	if x != nil {
		return x.ChgScore
	}
	return 0
}

func (x *UserTally) GetChgSubScore() map[int32]int64 {
	if x != nil {
		return x.ChgSubScore
	}
	return nil
}

func (x *UserTally) GetExtraMap() map[string]string {
	if x != nil {
		return x.ExtraMap
	}
	return nil
}

type ReqBattleOver_BattleScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score int64  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Extra []byte `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *ReqBattleOver_BattleScore) Reset() {
	*x = ReqBattleOver_BattleScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBattleOver_BattleScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBattleOver_BattleScore) ProtoMessage() {}

func (x *ReqBattleOver_BattleScore) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBattleOver_BattleScore.ProtoReflect.Descriptor instead.
func (*ReqBattleOver_BattleScore) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ReqBattleOver_BattleScore) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ReqBattleOver_BattleScore) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_battle_proto protoreflect.FileDescriptor

var file_battle_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x22, 0x88, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53, 0x47,
	0x49, 0x44, 0x12, 0x0d, 0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x02, 0x49, 0x44, 0x10, 0xf1, 0x9c, 0x06, 0x22, 0x89, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53, 0x47, 0x49, 0x44, 0x12, 0x0d,
	0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x02, 0x49, 0x44, 0x10, 0xf2, 0x9c, 0x06, 0x22, 0x4e, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x51, 0x75,
	0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53, 0x47, 0x49, 0x44, 0x12, 0x0d,
	0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x02, 0x49, 0x44, 0x10, 0xf3, 0x9c, 0x06, 0x22, 0x4f, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x51,
	0x75, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53, 0x47, 0x49, 0x44, 0x12,
	0x0d, 0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x02, 0x49, 0x44, 0x10, 0xf4, 0x9c, 0x06, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x73, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x73, 0x79, 0x6e, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53, 0x47, 0x49, 0x44,
	0x12, 0x0d, 0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x02, 0x49, 0x44, 0x10, 0xf5, 0x9c, 0x06, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x73, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x79, 0x6e, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53, 0x47, 0x49,
	0x44, 0x12, 0x0d, 0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x02, 0x49, 0x44, 0x10, 0xf6, 0x9c, 0x06, 0x22, 0x61, 0x0a, 0x0a, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x57, 0x0a,
	0x0e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x6d, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x86, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x12, 0x3f, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x64, 0x22, 0x20, 0x0a,
	0x05, 0x4d, 0x53, 0x47, 0x49, 0x44, 0x12, 0x0d, 0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x02, 0x49, 0x44, 0x10, 0xd5, 0x9d, 0x06, 0x22,
	0x68, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53, 0x47, 0x49, 0x44,
	0x12, 0x0d, 0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x02, 0x49, 0x44, 0x10, 0xd6, 0x9d, 0x06, 0x22, 0x9c, 0x03, 0x0a, 0x0d, 0x52, 0x65,
	0x71, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x74, 0x61, 0x6c, 0x6c,
	0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x6c, 0x6c, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x39, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x65, 0x0a, 0x0a, 0x54,
	0x61, 0x6c, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53, 0x47, 0x49, 0x44, 0x12, 0x0d, 0x0a, 0x09, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x02, 0x49, 0x44,
	0x10, 0xd7, 0x9d, 0x06, 0x22, 0x32, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x10, 0x02, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0x20, 0x0a, 0x05, 0x4d, 0x53,
	0x47, 0x49, 0x44, 0x12, 0x0d, 0x0a, 0x09, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x02, 0x49, 0x44, 0x10, 0xd8, 0x9d, 0x06, 0x22, 0x12, 0x0a, 0x10,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x22, 0x11, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4f,
	0x76, 0x65, 0x72, 0x22, 0x81, 0x03, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6c,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x68, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x63, 0x68, 0x67, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x43, 0x68, 0x67, 0x53, 0x75, 0x62, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x68, 0x67, 0x53, 0x75, 0x62, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c,
	0x6c, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x70, 0x1a, 0x3e, 0x0a, 0x10, 0x43, 0x68,
	0x67, 0x53, 0x75, 0x62, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x1d, 0x5a, 0x0a, 0x6d, 0x73, 0x67, 0x2f, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0xaa, 0x02, 0x0e, 0x73, 0x72, 0x63, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_battle_proto_rawDescOnce sync.Once
	file_battle_proto_rawDescData = file_battle_proto_rawDesc
)

func file_battle_proto_rawDescGZIP() []byte {
	file_battle_proto_rawDescOnce.Do(func() {
		file_battle_proto_rawDescData = protoimpl.X.CompressGZIP(file_battle_proto_rawDescData)
	})
	return file_battle_proto_rawDescData
}

var file_battle_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_battle_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_battle_proto_goTypes = []any{
	(ReqJoinBattle_MSGID)(0),          // 0: openproto.battle.ReqJoinBattle.MSGID
	(RespJoinBattle_MSGID)(0),         // 1: openproto.battle.RespJoinBattle.MSGID
	(ReqQuitBattle_MSGID)(0),          // 2: openproto.battle.ReqQuitBattle.MSGID
	(RespQuitBattle_MSGID)(0),         // 3: openproto.battle.RespQuitBattle.MSGID
	(BattleMsgToClient_MSGID)(0),      // 4: openproto.battle.BattleMsgToClient.MSGID
	(BattleMsgToServer_MSGID)(0),      // 5: openproto.battle.BattleMsgToServer.MSGID
	(ReqStartBattle_MSGID)(0),         // 6: openproto.battle.ReqStartBattle.MSGID
	(RespStartBattle_MSGID)(0),        // 7: openproto.battle.RespStartBattle.MSGID
	(ReqBattleOver_MSGID)(0),          // 8: openproto.battle.ReqBattleOver.MSGID
	(ReqBattleOver_State)(0),          // 9: openproto.battle.ReqBattleOver.State
	(RespBattleOver_MSGID)(0),         // 10: openproto.battle.RespBattleOver.MSGID
	(*ReqJoinBattle)(nil),             // 11: openproto.battle.ReqJoinBattle
	(*RespJoinBattle)(nil),            // 12: openproto.battle.RespJoinBattle
	(*ReqQuitBattle)(nil),             // 13: openproto.battle.ReqQuitBattle
	(*RespQuitBattle)(nil),            // 14: openproto.battle.RespQuitBattle
	(*BattleMsgToClient)(nil),         // 15: openproto.battle.BattleMsgToClient
	(*BattleMsgToServer)(nil),         // 16: openproto.battle.BattleMsgToServer
	(*PlayerInfo)(nil),                // 17: openproto.battle.PlayerInfo
	(*TableConfigure)(nil),            // 18: openproto.battle.TableConfigure
	(*ReqStartBattle)(nil),            // 19: openproto.battle.ReqStartBattle
	(*RespStartBattle)(nil),           // 20: openproto.battle.RespStartBattle
	(*ReqBattleOver)(nil),             // 21: openproto.battle.ReqBattleOver
	(*RespBattleOver)(nil),            // 22: openproto.battle.RespBattleOver
	(*EventBattleStart)(nil),          // 23: openproto.battle.EventBattleStart
	(*EventBattleOver)(nil),           // 24: openproto.battle.EventBattleOver
	(*UserTally)(nil),                 // 25: openproto.battle.UserTally
	(*ReqBattleOver_BattleScore)(nil), // 26: openproto.battle.ReqBattleOver.BattleScore
	nil,                               // 27: openproto.battle.ReqBattleOver.TallyEntry
	nil,                               // 28: openproto.battle.UserTally.ChgSubScoreEntry
	nil,                               // 29: openproto.battle.UserTally.ExtraMapEntry
}
var file_battle_proto_depIdxs = []int32{
	18, // 0: openproto.battle.ReqStartBattle.table_conf:type_name -> openproto.battle.TableConfigure
	17, // 1: openproto.battle.ReqStartBattle.player_infos:type_name -> openproto.battle.PlayerInfo
	9,  // 2: openproto.battle.ReqBattleOver.state:type_name -> openproto.battle.ReqBattleOver.State
	27, // 3: openproto.battle.ReqBattleOver.tally:type_name -> openproto.battle.ReqBattleOver.TallyEntry
	28, // 4: openproto.battle.UserTally.chg_sub_score:type_name -> openproto.battle.UserTally.ChgSubScoreEntry
	29, // 5: openproto.battle.UserTally.extra_map:type_name -> openproto.battle.UserTally.ExtraMapEntry
	26, // 6: openproto.battle.ReqBattleOver.TallyEntry.value:type_name -> openproto.battle.ReqBattleOver.BattleScore
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_battle_proto_init() }
func file_battle_proto_init() {
	if File_battle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_battle_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ReqJoinBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RespJoinBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReqQuitBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RespQuitBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BattleMsgToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BattleMsgToServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TableConfigure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReqStartBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RespStartBattle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ReqBattleOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RespBattleOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*EventBattleStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*EventBattleOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UserTally); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ReqBattleOver_BattleScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_battle_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_battle_proto_goTypes,
		DependencyIndexes: file_battle_proto_depIdxs,
		EnumInfos:         file_battle_proto_enumTypes,
		MessageInfos:      file_battle_proto_msgTypes,
	}.Build()
	File_battle_proto = out.File
	file_battle_proto_rawDesc = nil
	file_battle_proto_goTypes = nil
	file_battle_proto_depIdxs = nil
}
