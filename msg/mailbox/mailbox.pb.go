// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.23.4
// source: mailbox.proto

package mailbox

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MailRecvCond_MailRecvCondItem_CondType int32

const (
	MailRecvCond_MailRecvCondItem_NumIDList MailRecvCond_MailRecvCondItem_CondType = 0
)

// Enum value maps for MailRecvCond_MailRecvCondItem_CondType.
var (
	MailRecvCond_MailRecvCondItem_CondType_name = map[int32]string{
		0: "NumIDList",
	}
	MailRecvCond_MailRecvCondItem_CondType_value = map[string]int32{
		"NumIDList": 0,
	}
)

func (x MailRecvCond_MailRecvCondItem_CondType) Enum() *MailRecvCond_MailRecvCondItem_CondType {
	p := new(MailRecvCond_MailRecvCondItem_CondType)
	*p = x
	return p
}

func (x MailRecvCond_MailRecvCondItem_CondType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailRecvCond_MailRecvCondItem_CondType) Descriptor() protoreflect.EnumDescriptor {
	return file_mailbox_proto_enumTypes[0].Descriptor()
}

func (MailRecvCond_MailRecvCondItem_CondType) Type() protoreflect.EnumType {
	return &file_mailbox_proto_enumTypes[0]
}

func (x MailRecvCond_MailRecvCondItem_CondType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailRecvCond_MailRecvCondItem_CondType.Descriptor instead.
func (MailRecvCond_MailRecvCondItem_CondType) EnumDescriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{1, 0, 0}
}

type MailAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MailAttachment_MailAttachmentItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MailAttachment) Reset() {
	*x = MailAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailAttachment) ProtoMessage() {}

func (x *MailAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailAttachment.ProtoReflect.Descriptor instead.
func (*MailAttachment) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{0}
}

func (x *MailAttachment) GetItems() []*MailAttachment_MailAttachmentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type MailRecvCond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MailRecvCond_MailRecvCondItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MailRecvCond) Reset() {
	*x = MailRecvCond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailRecvCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailRecvCond) ProtoMessage() {}

func (x *MailRecvCond) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailRecvCond.ProtoReflect.Descriptor instead.
func (*MailRecvCond) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{1}
}

func (x *MailRecvCond) GetItems() []*MailRecvCond_MailRecvCondItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReqSendMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content      string          `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Attachment   *MailAttachment `protobuf:"bytes,4,opt,name=attachment,proto3" json:"attachment,omitempty"`
	RecvConds    *MailRecvCond   `protobuf:"bytes,5,opt,name=recv_conds,json=recvConds,proto3" json:"recv_conds,omitempty"`
	MailEffectAt string          `protobuf:"bytes,6,opt,name=mail_effect_at,json=mailEffectAt,proto3" json:"mail_effect_at,omitempty"` // 邮件生效时间
	MailExpireAt string          `protobuf:"bytes,7,opt,name=mail_expire_at,json=mailExpireAt,proto3" json:"mail_expire_at,omitempty"` // 邮件过期时间
}

func (x *ReqSendMail) Reset() {
	*x = ReqSendMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSendMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSendMail) ProtoMessage() {}

func (x *ReqSendMail) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSendMail.ProtoReflect.Descriptor instead.
func (*ReqSendMail) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{2}
}

func (x *ReqSendMail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqSendMail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReqSendMail) GetAttachment() *MailAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *ReqSendMail) GetRecvConds() *MailRecvCond {
	if x != nil {
		return x.RecvConds
	}
	return nil
}

func (x *ReqSendMail) GetMailEffectAt() string {
	if x != nil {
		return x.MailEffectAt
	}
	return ""
}

func (x *ReqSendMail) GetMailExpireAt() string {
	if x != nil {
		return x.MailExpireAt
	}
	return ""
}

type RespSendMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mailid uint64 `protobuf:"varint,1,opt,name=mailid,proto3" json:"mailid,omitempty"`
}

func (x *RespSendMail) Reset() {
	*x = RespSendMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSendMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSendMail) ProtoMessage() {}

func (x *RespSendMail) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSendMail.ProtoReflect.Descriptor instead.
func (*RespSendMail) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{3}
}

func (x *RespSendMail) GetMailid() uint64 {
	if x != nil {
		return x.Mailid
	}
	return 0
}

type ReqSetMailStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mailid uint64 `protobuf:"varint,1,opt,name=mailid,proto3" json:"mailid,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReqSetMailStatus) Reset() {
	*x = ReqSetMailStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSetMailStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSetMailStatus) ProtoMessage() {}

func (x *ReqSetMailStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSetMailStatus.ProtoReflect.Descriptor instead.
func (*ReqSetMailStatus) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{4}
}

func (x *ReqSetMailStatus) GetMailid() uint64 {
	if x != nil {
		return x.Mailid
	}
	return 0
}

func (x *ReqSetMailStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RespSetMailStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mailid uint64 `protobuf:"varint,1,opt,name=mailid,proto3" json:"mailid,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RespSetMailStatus) Reset() {
	*x = RespSetMailStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSetMailStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSetMailStatus) ProtoMessage() {}

func (x *RespSetMailStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSetMailStatus.ProtoReflect.Descriptor instead.
func (*RespSetMailStatus) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{5}
}

func (x *RespSetMailStatus) GetMailid() uint64 {
	if x != nil {
		return x.Mailid
	}
	return 0
}

func (x *RespSetMailStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ListPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum  int32 `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *ListPage) Reset() {
	*x = ListPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPage) ProtoMessage() {}

func (x *ListPage) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPage.ProtoReflect.Descriptor instead.
func (*ListPage) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{6}
}

func (x *ListPage) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPage) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type ReqMailDetailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *ListPage `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ReqMailDetailList) Reset() {
	*x = ReqMailDetailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMailDetailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMailDetailList) ProtoMessage() {}

func (x *ReqMailDetailList) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMailDetailList.ProtoReflect.Descriptor instead.
func (*ReqMailDetailList) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{7}
}

func (x *ReqMailDetailList) GetPage() *ListPage {
	if x != nil {
		return x.Page
	}
	return nil
}

type RespMailDetailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Mails []*RespMailDetailList_MailDetail `protobuf:"bytes,2,rep,name=mails,proto3" json:"mails,omitempty"`
}

func (x *RespMailDetailList) Reset() {
	*x = RespMailDetailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespMailDetailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMailDetailList) ProtoMessage() {}

func (x *RespMailDetailList) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMailDetailList.ProtoReflect.Descriptor instead.
func (*RespMailDetailList) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{8}
}

func (x *RespMailDetailList) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RespMailDetailList) GetMails() []*RespMailDetailList_MailDetail {
	if x != nil {
		return x.Mails
	}
	return nil
}

type ReqRecvMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *ListPage `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ReqRecvMail) Reset() {
	*x = ReqRecvMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRecvMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRecvMail) ProtoMessage() {}

func (x *ReqRecvMail) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRecvMail.ProtoReflect.Descriptor instead.
func (*ReqRecvMail) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{9}
}

func (x *ReqRecvMail) GetPage() *ListPage {
	if x != nil {
		return x.Page
	}
	return nil
}

type RespRecvMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestCheckMailid uint32                       `protobuf:"varint,1,opt,name=latest_check_mailid,json=latestCheckMailid,proto3" json:"latest_check_mailid,omitempty"`
	Mails             []*RespRecvMail_RecvMailInfo `protobuf:"bytes,2,rep,name=mails,proto3" json:"mails,omitempty"`
}

func (x *RespRecvMail) Reset() {
	*x = RespRecvMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespRecvMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespRecvMail) ProtoMessage() {}

func (x *RespRecvMail) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespRecvMail.ProtoReflect.Descriptor instead.
func (*RespRecvMail) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{10}
}

func (x *RespRecvMail) GetLatestCheckMailid() uint32 {
	if x != nil {
		return x.LatestCheckMailid
	}
	return 0
}

func (x *RespRecvMail) GetMails() []*RespRecvMail_RecvMailInfo {
	if x != nil {
		return x.Mails
	}
	return nil
}

type ReqMarkUserMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marks map[uint64]uint32 `protobuf:"bytes,1,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // mailid : mark
}

func (x *ReqMarkUserMail) Reset() {
	*x = ReqMarkUserMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMarkUserMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMarkUserMail) ProtoMessage() {}

func (x *ReqMarkUserMail) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMarkUserMail.ProtoReflect.Descriptor instead.
func (*ReqMarkUserMail) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{11}
}

func (x *ReqMarkUserMail) GetMarks() map[uint64]uint32 {
	if x != nil {
		return x.Marks
	}
	return nil
}

type RespMarkUserMail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[uint64]uint32 `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // mailid : mark
}

func (x *RespMarkUserMail) Reset() {
	*x = RespMarkUserMail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespMarkUserMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMarkUserMail) ProtoMessage() {}

func (x *RespMarkUserMail) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMarkUserMail.ProtoReflect.Descriptor instead.
func (*RespMarkUserMail) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{12}
}

func (x *RespMarkUserMail) GetResult() map[uint64]uint32 {
	if x != nil {
		return x.Result
	}
	return nil
}

type MailAttachment_MailAttachmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cnt  int64  `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *MailAttachment_MailAttachmentItem) Reset() {
	*x = MailAttachment_MailAttachmentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailAttachment_MailAttachmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailAttachment_MailAttachmentItem) ProtoMessage() {}

func (x *MailAttachment_MailAttachmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailAttachment_MailAttachmentItem.ProtoReflect.Descriptor instead.
func (*MailAttachment_MailAttachmentItem) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MailAttachment_MailAttachmentItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MailAttachment_MailAttachmentItem) GetCnt() int64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

func (x *MailAttachment_MailAttachmentItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type MailRecvCond_MailRecvCondItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  MailRecvCond_MailRecvCondItem_CondType `protobuf:"varint,1,opt,name=type,proto3,enum=openproto.route.MailRecvCond_MailRecvCondItem_CondType" json:"type,omitempty"`
	Value string                                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MailRecvCond_MailRecvCondItem) Reset() {
	*x = MailRecvCond_MailRecvCondItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailRecvCond_MailRecvCondItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailRecvCond_MailRecvCondItem) ProtoMessage() {}

func (x *MailRecvCond_MailRecvCondItem) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailRecvCond_MailRecvCondItem.ProtoReflect.Descriptor instead.
func (*MailRecvCond_MailRecvCondItem) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MailRecvCond_MailRecvCondItem) GetType() MailRecvCond_MailRecvCondItem_CondType {
	if x != nil {
		return x.Type
	}
	return MailRecvCond_MailRecvCondItem_NumIDList
}

func (x *MailRecvCond_MailRecvCondItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RespMailDetailList_Statist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailRead   uint32 `protobuf:"varint,1,opt,name=mail_read,json=mailRead,proto3" json:"mail_read,omitempty"`
	AttachRecv uint32 `protobuf:"varint,2,opt,name=attach_recv,json=attachRecv,proto3" json:"attach_recv,omitempty"`
}

func (x *RespMailDetailList_Statist) Reset() {
	*x = RespMailDetailList_Statist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespMailDetailList_Statist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMailDetailList_Statist) ProtoMessage() {}

func (x *RespMailDetailList_Statist) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMailDetailList_Statist.ProtoReflect.Descriptor instead.
func (*RespMailDetailList_Statist) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{8, 0}
}

func (x *RespMailDetailList_Statist) GetMailRead() uint32 {
	if x != nil {
		return x.MailRead
	}
	return 0
}

func (x *RespMailDetailList_Statist) GetAttachRecv() uint32 {
	if x != nil {
		return x.AttachRecv
	}
	return 0
}

type RespMailDetailList_MailDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mailid     uint64                      `protobuf:"varint,1,opt,name=mailid,proto3" json:"mailid,omitempty"`
	Title      string                      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content    string                      `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Attachment *MailAttachment             `protobuf:"bytes,4,opt,name=attachment,proto3" json:"attachment,omitempty"`
	RecvConds  *MailRecvCond               `protobuf:"bytes,5,opt,name=recv_conds,json=recvConds,proto3" json:"recv_conds,omitempty"`
	EffectAt   string                      `protobuf:"bytes,6,opt,name=effect_at,json=effectAt,proto3" json:"effect_at,omitempty"`
	ExpireAt   string                      `protobuf:"bytes,7,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	CreateAt   string                      `protobuf:"bytes,8,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	CreateBy   string                      `protobuf:"bytes,9,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	Status     int32                       `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Statist    *RespMailDetailList_Statist `protobuf:"bytes,11,opt,name=statist,proto3" json:"statist,omitempty"`
}

func (x *RespMailDetailList_MailDetail) Reset() {
	*x = RespMailDetailList_MailDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespMailDetailList_MailDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMailDetailList_MailDetail) ProtoMessage() {}

func (x *RespMailDetailList_MailDetail) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMailDetailList_MailDetail.ProtoReflect.Descriptor instead.
func (*RespMailDetailList_MailDetail) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{8, 1}
}

func (x *RespMailDetailList_MailDetail) GetMailid() uint64 {
	if x != nil {
		return x.Mailid
	}
	return 0
}

func (x *RespMailDetailList_MailDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RespMailDetailList_MailDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RespMailDetailList_MailDetail) GetAttachment() *MailAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *RespMailDetailList_MailDetail) GetRecvConds() *MailRecvCond {
	if x != nil {
		return x.RecvConds
	}
	return nil
}

func (x *RespMailDetailList_MailDetail) GetEffectAt() string {
	if x != nil {
		return x.EffectAt
	}
	return ""
}

func (x *RespMailDetailList_MailDetail) GetExpireAt() string {
	if x != nil {
		return x.ExpireAt
	}
	return ""
}

func (x *RespMailDetailList_MailDetail) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *RespMailDetailList_MailDetail) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *RespMailDetailList_MailDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespMailDetailList_MailDetail) GetStatist() *RespMailDetailList_Statist {
	if x != nil {
		return x.Statist
	}
	return nil
}

type RespRecvMail_RecvMailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mailid     uint64          `protobuf:"varint,1,opt,name=mailid,proto3" json:"mailid,omitempty"`
	Title      string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content    string          `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Attachment *MailAttachment `protobuf:"bytes,5,opt,name=attachment,proto3" json:"attachment,omitempty"`
	RecvAt     int64           `protobuf:"varint,8,opt,name=recv_at,json=recvAt,proto3" json:"recv_at,omitempty"`
	Mark       uint32          `protobuf:"varint,9,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *RespRecvMail_RecvMailInfo) Reset() {
	*x = RespRecvMail_RecvMailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mailbox_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespRecvMail_RecvMailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespRecvMail_RecvMailInfo) ProtoMessage() {}

func (x *RespRecvMail_RecvMailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mailbox_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespRecvMail_RecvMailInfo.ProtoReflect.Descriptor instead.
func (*RespRecvMail_RecvMailInfo) Descriptor() ([]byte, []int) {
	return file_mailbox_proto_rawDescGZIP(), []int{10, 0}
}

func (x *RespRecvMail_RecvMailInfo) GetMailid() uint64 {
	if x != nil {
		return x.Mailid
	}
	return 0
}

func (x *RespRecvMail_RecvMailInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RespRecvMail_RecvMailInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RespRecvMail_RecvMailInfo) GetAttachment() *MailAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *RespRecvMail_RecvMailInfo) GetRecvAt() int64 {
	if x != nil {
		return x.RecvAt
	}
	return 0
}

func (x *RespRecvMail_RecvMailInfo) GetMark() uint32 {
	if x != nil {
		return x.Mark
	}
	return 0
}

var File_mailbox_proto protoreflect.FileDescriptor

var file_mailbox_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x4e, 0x0a,
	0x12, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xe7, 0x01,
	0x0a, 0x0c, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x76, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x44,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e,
	0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x76, 0x43, 0x6f, 0x6e, 0x64, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x63, 0x76, 0x43, 0x6f, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x90, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63,
	0x76, 0x43, 0x6f, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x63, 0x76, 0x43, 0x6f, 0x6e, 0x64, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x76, 0x43,
	0x6f, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x19, 0x0a, 0x08,
	0x43, 0x6f, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x75, 0x6d, 0x49,
	0x44, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x00, 0x22, 0x88, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4d, 0x61,
	0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x76, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x76, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x61, 0x69, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x41, 0x74, 0x22, 0x26, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x43,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x42, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x42, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x4d, 0x61,
	0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xe2, 0x04, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x70, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x05, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x61,
	0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x47,
	0x0a, 0x07, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x5f, 0x72, 0x65, 0x63, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x52, 0x65, 0x63, 0x76, 0x1a, 0xa6, 0x03, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3f,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x76, 0x43, 0x6f,
	0x6e, 0x64, 0x52, 0x09, 0x72, 0x65, 0x63, 0x76, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x22, 0x3c, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x61, 0x69, 0x6c, 0x12,
	0x2d, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc7,
	0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x61, 0x69, 0x6c, 0x12,
	0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x12,
	0x40, 0x0a, 0x05, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65,
	0x63, 0x76, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x1a, 0xc4, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x76, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x63, 0x76, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x8e, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x4d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x0a, 0x05,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x4d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x1a,
	0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x45,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x69,
	0x6c, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x1f, 0x5a, 0x0b, 0x6d, 0x73, 0x67, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0xaa,
	0x02, 0x0f, 0x73, 0x72, 0x63, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f,
	0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mailbox_proto_rawDescOnce sync.Once
	file_mailbox_proto_rawDescData = file_mailbox_proto_rawDesc
)

func file_mailbox_proto_rawDescGZIP() []byte {
	file_mailbox_proto_rawDescOnce.Do(func() {
		file_mailbox_proto_rawDescData = protoimpl.X.CompressGZIP(file_mailbox_proto_rawDescData)
	})
	return file_mailbox_proto_rawDescData
}

var file_mailbox_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mailbox_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_mailbox_proto_goTypes = []any{
	(MailRecvCond_MailRecvCondItem_CondType)(0), // 0: openproto.route.MailRecvCond.MailRecvCondItem.CondType
	(*MailAttachment)(nil),                      // 1: openproto.route.MailAttachment
	(*MailRecvCond)(nil),                        // 2: openproto.route.MailRecvCond
	(*ReqSendMail)(nil),                         // 3: openproto.route.ReqSendMail
	(*RespSendMail)(nil),                        // 4: openproto.route.RespSendMail
	(*ReqSetMailStatus)(nil),                    // 5: openproto.route.ReqSetMailStatus
	(*RespSetMailStatus)(nil),                   // 6: openproto.route.RespSetMailStatus
	(*ListPage)(nil),                            // 7: openproto.route.ListPage
	(*ReqMailDetailList)(nil),                   // 8: openproto.route.ReqMailDetailList
	(*RespMailDetailList)(nil),                  // 9: openproto.route.RespMailDetailList
	(*ReqRecvMail)(nil),                         // 10: openproto.route.ReqRecvMail
	(*RespRecvMail)(nil),                        // 11: openproto.route.RespRecvMail
	(*ReqMarkUserMail)(nil),                     // 12: openproto.route.ReqMarkUserMail
	(*RespMarkUserMail)(nil),                    // 13: openproto.route.RespMarkUserMail
	(*MailAttachment_MailAttachmentItem)(nil),   // 14: openproto.route.MailAttachment.MailAttachmentItem
	(*MailRecvCond_MailRecvCondItem)(nil),       // 15: openproto.route.MailRecvCond.MailRecvCondItem
	(*RespMailDetailList_Statist)(nil),          // 16: openproto.route.RespMailDetailList.Statist
	(*RespMailDetailList_MailDetail)(nil),       // 17: openproto.route.RespMailDetailList.MailDetail
	(*RespRecvMail_RecvMailInfo)(nil),           // 18: openproto.route.RespRecvMail.RecvMailInfo
	nil,                                         // 19: openproto.route.ReqMarkUserMail.MarksEntry
	nil,                                         // 20: openproto.route.RespMarkUserMail.ResultEntry
}
var file_mailbox_proto_depIdxs = []int32{
	14, // 0: openproto.route.MailAttachment.items:type_name -> openproto.route.MailAttachment.MailAttachmentItem
	15, // 1: openproto.route.MailRecvCond.items:type_name -> openproto.route.MailRecvCond.MailRecvCondItem
	1,  // 2: openproto.route.ReqSendMail.attachment:type_name -> openproto.route.MailAttachment
	2,  // 3: openproto.route.ReqSendMail.recv_conds:type_name -> openproto.route.MailRecvCond
	7,  // 4: openproto.route.ReqMailDetailList.page:type_name -> openproto.route.ListPage
	17, // 5: openproto.route.RespMailDetailList.mails:type_name -> openproto.route.RespMailDetailList.MailDetail
	7,  // 6: openproto.route.ReqRecvMail.page:type_name -> openproto.route.ListPage
	18, // 7: openproto.route.RespRecvMail.mails:type_name -> openproto.route.RespRecvMail.RecvMailInfo
	19, // 8: openproto.route.ReqMarkUserMail.marks:type_name -> openproto.route.ReqMarkUserMail.MarksEntry
	20, // 9: openproto.route.RespMarkUserMail.result:type_name -> openproto.route.RespMarkUserMail.ResultEntry
	0,  // 10: openproto.route.MailRecvCond.MailRecvCondItem.type:type_name -> openproto.route.MailRecvCond.MailRecvCondItem.CondType
	1,  // 11: openproto.route.RespMailDetailList.MailDetail.attachment:type_name -> openproto.route.MailAttachment
	2,  // 12: openproto.route.RespMailDetailList.MailDetail.recv_conds:type_name -> openproto.route.MailRecvCond
	16, // 13: openproto.route.RespMailDetailList.MailDetail.statist:type_name -> openproto.route.RespMailDetailList.Statist
	1,  // 14: openproto.route.RespRecvMail.RecvMailInfo.attachment:type_name -> openproto.route.MailAttachment
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_mailbox_proto_init() }
func file_mailbox_proto_init() {
	if File_mailbox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mailbox_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MailAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MailRecvCond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReqSendMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RespSendMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ReqSetMailStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RespSetMailStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ReqMailDetailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RespMailDetailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ReqRecvMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RespRecvMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ReqMarkUserMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*RespMarkUserMail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*MailAttachment_MailAttachmentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*MailRecvCond_MailRecvCondItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RespMailDetailList_Statist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RespMailDetailList_MailDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mailbox_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RespRecvMail_RecvMailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mailbox_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mailbox_proto_goTypes,
		DependencyIndexes: file_mailbox_proto_depIdxs,
		EnumInfos:         file_mailbox_proto_enumTypes,
		MessageInfos:      file_mailbox_proto_msgTypes,
	}.Build()
	File_mailbox_proto = out.File
	file_mailbox_proto_rawDesc = nil
	file_mailbox_proto_goTypes = nil
	file_mailbox_proto_depIdxs = nil
}
