// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.23.4
// source: surf.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgType int32

const (
	MsgType_Async    MsgType = 0
	MsgType_Request  MsgType = 1
	MsgType_Response MsgType = 2
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "Async",
		1: "Request",
		2: "Response",
	}
	MsgType_value = map[string]int32{
		"Async":    0,
		"Request":  1,
		"Response": 2,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_surf_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_surf_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_surf_proto_rawDescGZIP(), []int{0}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_surf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_surf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_surf_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type ClientMsgWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err     *Error  `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	MsgType MsgType `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3,enum=core.MsgType" json:"msg_type,omitempty"`
	Seqid   uint32  `protobuf:"varint,3,opt,name=seqid,proto3" json:"seqid,omitempty"`
	Msgid   int32   `protobuf:"varint,4,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Data    []byte  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	From    uint64  `protobuf:"varint,6,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *ClientMsgWrap) Reset() {
	*x = ClientMsgWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_surf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMsgWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMsgWrap) ProtoMessage() {}

func (x *ClientMsgWrap) ProtoReflect() protoreflect.Message {
	mi := &file_surf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMsgWrap.ProtoReflect.Descriptor instead.
func (*ClientMsgWrap) Descriptor() ([]byte, []int) {
	return file_surf_proto_rawDescGZIP(), []int{1}
}

func (x *ClientMsgWrap) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ClientMsgWrap) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_Async
}

func (x *ClientMsgWrap) GetSeqid() uint32 {
	if x != nil {
		return x.Seqid
	}
	return 0
}

func (x *ClientMsgWrap) GetMsgid() int32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *ClientMsgWrap) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ClientMsgWrap) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

type AsyncMsgWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Body []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *AsyncMsgWrap) Reset() {
	*x = AsyncMsgWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_surf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncMsgWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncMsgWrap) ProtoMessage() {}

func (x *AsyncMsgWrap) ProtoReflect() protoreflect.Message {
	mi := &file_surf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncMsgWrap.ProtoReflect.Descriptor instead.
func (*AsyncMsgWrap) Descriptor() ([]byte, []int) {
	return file_surf_proto_rawDescGZIP(), []int{2}
}

func (x *AsyncMsgWrap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AsyncMsgWrap) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type RequestMsgWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Body  []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Seqid uint32 `protobuf:"varint,3,opt,name=seqid,proto3" json:"seqid,omitempty"`
}

func (x *RequestMsgWrap) Reset() {
	*x = RequestMsgWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_surf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMsgWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMsgWrap) ProtoMessage() {}

func (x *RequestMsgWrap) ProtoReflect() protoreflect.Message {
	mi := &file_surf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMsgWrap.ProtoReflect.Descriptor instead.
func (*RequestMsgWrap) Descriptor() ([]byte, []int) {
	return file_surf_proto_rawDescGZIP(), []int{3}
}

func (x *RequestMsgWrap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestMsgWrap) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *RequestMsgWrap) GetSeqid() uint32 {
	if x != nil {
		return x.Seqid
	}
	return 0
}

type ResponseMsgWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Body  []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Seqid uint32 `protobuf:"varint,3,opt,name=seqid,proto3" json:"seqid,omitempty"`
	Err   *Error `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *ResponseMsgWrap) Reset() {
	*x = ResponseMsgWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_surf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMsgWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMsgWrap) ProtoMessage() {}

func (x *ResponseMsgWrap) ProtoReflect() protoreflect.Message {
	mi := &file_surf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMsgWrap.ProtoReflect.Descriptor instead.
func (*ResponseMsgWrap) Descriptor() ([]byte, []int) {
	return file_surf_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseMsgWrap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResponseMsgWrap) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *ResponseMsgWrap) GetSeqid() uint32 {
	if x != nil {
		return x.Seqid
	}
	return 0
}

func (x *ResponseMsgWrap) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

var File_surf_proto protoreflect.FileDescriptor

var file_surf_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x33, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xac, 0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x73, 0x67, 0x57, 0x72, 0x61, 0x70, 0x12, 0x1d, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x65, 0x71, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x36, 0x0a, 0x0c, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d,
	0x73, 0x67, 0x57, 0x72, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x4e,
	0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x57, 0x72, 0x61, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x65, 0x71, 0x69, 0x64, 0x22, 0x6e,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x57, 0x72, 0x61,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x65, 0x71, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x2a, 0x2f,
	0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x73, 0x79,
	0x6e, 0x63, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x42,
	0x1c, 0x5a, 0x0b, 0x2e, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0xaa, 0x02,
	0x0c, 0x73, 0x72, 0x63, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_surf_proto_rawDescOnce sync.Once
	file_surf_proto_rawDescData = file_surf_proto_rawDesc
)

func file_surf_proto_rawDescGZIP() []byte {
	file_surf_proto_rawDescOnce.Do(func() {
		file_surf_proto_rawDescData = protoimpl.X.CompressGZIP(file_surf_proto_rawDescData)
	})
	return file_surf_proto_rawDescData
}

var file_surf_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_surf_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_surf_proto_goTypes = []interface{}{
	(MsgType)(0),            // 0: core.MsgType
	(*Error)(nil),           // 1: core.Error
	(*ClientMsgWrap)(nil),   // 2: core.ClientMsgWrap
	(*AsyncMsgWrap)(nil),    // 3: core.AsyncMsgWrap
	(*RequestMsgWrap)(nil),  // 4: core.RequestMsgWrap
	(*ResponseMsgWrap)(nil), // 5: core.ResponseMsgWrap
}
var file_surf_proto_depIdxs = []int32{
	1, // 0: core.ClientMsgWrap.err:type_name -> core.Error
	0, // 1: core.ClientMsgWrap.msg_type:type_name -> core.MsgType
	1, // 2: core.ResponseMsgWrap.err:type_name -> core.Error
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_surf_proto_init() }
func file_surf_proto_init() {
	if File_surf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_surf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_surf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMsgWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_surf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncMsgWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_surf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMsgWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_surf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMsgWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_surf_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_surf_proto_goTypes,
		DependencyIndexes: file_surf_proto_depIdxs,
		EnumInfos:         file_surf_proto_enumTypes,
		MessageInfos:      file_surf_proto_msgTypes,
	}.Build()
	File_surf_proto = out.File
	file_surf_proto_rawDesc = nil
	file_surf_proto_goTypes = nil
	file_surf_proto_depIdxs = nil
}
